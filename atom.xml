<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ryan Hoo]]></title>
  <link href="http://ryanhoo.github.io/atom.xml" rel="self"/>
  <link href="http://ryanhoo.github.io/"/>
  <updated>2014-06-03T22:42:26+08:00</updated>
  <id>http://ryanhoo.github.io/</id>
  <author>
    <name><![CDATA[Ryan Hoo]]></name>
    <email><![CDATA[ryan.hoo.j@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android大图片裁剪终极解决方案（下：拍照截图）]]></title>
    <link href="http://ryanhoo.github.io/blog/2014/06/03/the-ultimate-approach-to-crop-photos-on-android-3/"/>
    <updated>2014-06-03T22:34:51+08:00</updated>
    <id>http://ryanhoo.github.io/blog/2014/06/03/the-ultimate-approach-to-crop-photos-on-android-3</id>
    <content type="html"><![CDATA[<p>上一篇博客中，我们学习到了如何使用Android相册截图。在这篇博客中，我将向大家展示如何拍照截图。</p>

<p>拍照截图有点儿特殊，要知道，现在的Android智能手机的摄像头都是几百万的像素，拍出来的图片都是非常大的。因此，我们不能像对待相册截图一样使用Bitmap小图，无论大图小图都统一使用Uri进行操作。</p>

<h4 id="uri">一、首先准备好需要使用到的Uri：</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">IMAGE_FILE_LOCATION</span> <span class="o">=</span> <span class="s">&quot;file:///sdcard/temp.jpg&quot;</span><span class="o">;</span><span class="c1">//temp file</span>
</span><span class="line"><span class="n">Uri</span> <span class="n">imageUri</span> <span class="o">=</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">IMAGE_FILE_LOCATION</span><span class="o">);</span><span class="c1">//The Uri to store the big bitmap</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="mediastoreactionimagecapturecamera">二、使用MediaStore.ACTION_IMAGE_CAPTURE可以轻松调用Camera程序进行拍照：</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">MediaStore</span><span class="o">.</span><span class="na">ACTION_IMAGE_CAPTURE</span><span class="o">);</span><span class="c1">//action is capture</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="n">MediaStore</span><span class="o">.</span><span class="na">EXTRA_OUTPUT</span><span class="o">,</span> <span class="n">imageUri</span><span class="o">);</span>
</span><span class="line"><span class="n">startActivityForResult</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">TAKE_BIG_PICTURE</span><span class="o">);</span><span class="c1">//or TAKE_SMALL_PICTURE</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="onactivityresulturiuri">三、接下来就可以在 onActivityResult中拿到返回的数据（Uri），并将Uri传递给截图的程序。</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="k">switch</span> <span class="o">(</span><span class="n">requestCode</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line"><span class="k">case</span> <span class="nl">TAKE_BIG_PICTURE:</span>
</span><span class="line">	<span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;TAKE_BIG_PICTURE: data = &quot;</span> <span class="o">+</span> <span class="n">data</span><span class="o">);</span><span class="c1">//it seems to be null</span>
</span><span class="line">	<span class="c1">//TODO sent to crop</span>
</span><span class="line">	<span class="n">cropImageUri</span><span class="o">(</span><span class="n">imageUri</span><span class="o">,</span> <span class="mi">800</span><span class="o">,</span> <span class="mi">400</span><span class="o">,</span> <span class="n">CROP_BIG_PICTURE</span><span class="o">);</span>
</span><span class="line">	
</span><span class="line">	<span class="k">break</span><span class="o">;</span>
</span><span class="line"><span class="k">case</span> <span class="nl">TAKE_SMALL_PICTURE:</span>
</span><span class="line">	<span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;TAKE_SMALL_PICTURE: data = &quot;</span> <span class="o">+</span> <span class="n">data</span><span class="o">);</span>
</span><span class="line">	<span class="c1">//TODO sent to crop </span>
</span><span class="line">	<span class="n">cropImageUri</span><span class="o">(</span><span class="n">imageUri</span><span class="o">,</span> <span class="mi">300</span><span class="o">,</span> <span class="mi">150</span><span class="o">,</span> <span class="n">CROP_SMALL_PICTURE</span><span class="o">);</span>
</span><span class="line">	
</span><span class="line">	<span class="k">break</span><span class="o">;</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到，无论是拍大图片还是小图片，都是使用的Uri，只是尺寸不同而已。我们将这个操作封装在一个方法里面。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="kd">private</span> <span class="kt">void</span> <span class="nf">cropImageUri</span><span class="o">(</span><span class="n">Uri</span> <span class="n">uri</span><span class="o">,</span> <span class="kt">int</span> <span class="n">outputX</span><span class="o">,</span> <span class="kt">int</span> <span class="n">outputY</span><span class="o">,</span> <span class="kt">int</span> <span class="n">requestCode</span><span class="o">){</span>
</span><span class="line">	<span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">&quot;com.android.camera.action.CROP&quot;</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">setDataAndType</span><span class="o">(</span><span class="n">uri</span><span class="o">,</span> <span class="s">&quot;image/*&quot;</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;crop&quot;</span><span class="o">,</span> <span class="s">&quot;true&quot;</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;aspectX&quot;</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;aspectY&quot;</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputX&quot;</span><span class="o">,</span> <span class="n">outputX</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputY&quot;</span><span class="o">,</span> <span class="n">outputY</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;scale&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="n">MediaStore</span><span class="o">.</span><span class="na">EXTRA_OUTPUT</span><span class="o">,</span> <span class="n">uri</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;return-data&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputFormat&quot;</span><span class="o">,</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">CompressFormat</span><span class="o">.</span><span class="na">JPEG</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class="line">	<span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;noFaceDetection&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span> <span class="c1">// no face detection</span>
</span><span class="line">	<span class="n">startActivityForResult</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">requestCode</span><span class="o">);</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="section">四、最后一步，我们已经将数据传入裁剪图片程序，接下来要做的就是处理返回的数据了：</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="k">switch</span> <span class="o">(</span><span class="n">requestCode</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line"><span class="k">case</span> <span class="nl">CROP_BIG_PICTURE:</span><span class="c1">//from crop_big_picture</span>
</span><span class="line">	<span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;CROP_BIG_PICTURE: data = &quot;</span> <span class="o">+</span> <span class="n">data</span><span class="o">);</span><span class="c1">//it seems to be null</span>
</span><span class="line">	<span class="k">if</span><span class="o">(</span><span class="n">imageUri</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
</span><span class="line">		<span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">decodeUriAsBitmap</span><span class="o">(</span><span class="n">imageUri</span><span class="o">);</span>
</span><span class="line">		<span class="n">imageView</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">);</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	<span class="k">break</span><span class="o">;</span>
</span><span class="line"><span class="k">case</span> <span class="nl">CROP_SMALL_PICTURE:</span>
</span><span class="line">	<span class="k">if</span><span class="o">(</span><span class="n">imageUri</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
</span><span class="line">		<span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">decodeUriAsBitmap</span><span class="o">(</span><span class="n">imageUri</span><span class="o">);</span>
</span><span class="line">		<span class="n">imageView</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">);</span>
</span><span class="line">	<span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span><span class="line">		<span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;CROP_SMALL_PICTURE: data = &quot;</span> <span class="o">+</span> <span class="n">data</span><span class="o">);</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	<span class="k">break</span><span class="o">;</span>
</span><span class="line"><span class="k">default</span><span class="o">:</span>
</span><span class="line">	<span class="k">break</span><span class="o">;</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="section-1">效果图：</h4>

<p><img src="images/blog/android/184229_tlMc_245415.gif" alt="截图演示" /></p>

<blockquote>
  <p>代码托管于GitHub，会不定期更新：<a href="https://github.com/ryanhoo/PhotoCropper">https://github.com/ryanhoo/PhotoCropper</a></p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android大图片裁剪终极解决方案（中：从相册截图）]]></title>
    <link href="http://ryanhoo.github.io/blog/2014/06/03/the-ultimate-approach-to-crop-photos-on-android-2/"/>
    <updated>2014-06-03T22:21:35+08:00</updated>
    <id>http://ryanhoo.github.io/blog/2014/06/03/the-ultimate-approach-to-crop-photos-on-android-2</id>
    <content type="html"><![CDATA[<p>在这篇博客中，我将向大家展示如何从相册截图。</p>

<p>上一篇博客中，我就拍照截图这一需求进行了详细的分析，试图让大家了解Android本身的限制，以及我们应当采取的实现方案。</p>

<p>根据我们的分析与总结，图片的来源有拍照和相册，而可采取的操作有</p>

<ul>
  <li>使用Bitmap并返回数据</li>
  <li>使用Uri不返回数据</li>
</ul>

<p>前面我们了解到，使用Bitmap有可能会导致图片过大，而不能返回实际大小的图片，我将采用大图Uri，小图Bitmap的数据存储方式。</p>

<p>我们将要使用到URI来保存拍照后的图片：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">IMAGE_FILE_LOCATION</span> <span class="o">=</span> <span class="s">&quot;file:///sdcard/temp.jpg&quot;</span><span class="o">;</span><span class="c1">//temp file</span>
</span><span class="line"><span class="n">Uri</span> <span class="n">imageUri</span> <span class="o">=</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">IMAGE_FILE_LOCATION</span><span class="o">);</span><span class="c1">//The Uri to store the big bitmap</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>不难知道，我们从相册选取图片的<strong>Action</strong>为<code>Intent.ACTION_GET_CONTENT</code>。</p>

<p>根据我们上一篇博客的分析，我准备好了两个实例的Intent。</p>

<h4 id="section">一、从相册截大图：</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_GET_CONTENT</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">setType</span><span class="o">(</span><span class="s">&quot;image/*&quot;</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;crop&quot;</span><span class="o">,</span> <span class="s">&quot;true&quot;</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;aspectX&quot;</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;aspectY&quot;</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputX&quot;</span><span class="o">,</span> <span class="mi">600</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputY&quot;</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;scale&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;return-data&quot;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="n">MediaStore</span><span class="o">.</span><span class="na">EXTRA_OUTPUT</span><span class="o">,</span> <span class="n">imageUri</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputFormat&quot;</span><span class="o">,</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">CompressFormat</span><span class="o">.</span><span class="na">JPEG</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;noFaceDetection&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span> <span class="c1">// no face detection</span>
</span><span class="line"><span class="n">startActivityForResult</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">CHOOSE_BIG_PICTURE</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="section-1">二、从相册截小图</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_GET_CONTENT</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">setType</span><span class="o">(</span><span class="s">&quot;image/*&quot;</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;crop&quot;</span><span class="o">,</span> <span class="s">&quot;true&quot;</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;aspectX&quot;</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;aspectY&quot;</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputX&quot;</span><span class="o">,</span> <span class="mi">200</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputY&quot;</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;scale&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;return-data&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputFormat&quot;</span><span class="o">,</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">CompressFormat</span><span class="o">.</span><span class="na">JPEG</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;noFaceDetection&quot;</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span> <span class="c1">// no face detection</span>
</span><span class="line"><span class="n">startActivityForResult</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">CHOOSE_SMALL_PICTURE</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="onactivityresult">三、对应的onActivityResult可以这样处理返回的数据</h4>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="k">switch</span> <span class="o">(</span><span class="n">requestCode</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line"><span class="k">case</span> <span class="nl">CHOOSE_BIG_PICTURE:</span>
</span><span class="line">	<span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;CHOOSE_BIG_PICTURE: data = &quot;</span> <span class="o">+</span> <span class="n">data</span><span class="o">);</span><span class="c1">//it seems to be null</span>
</span><span class="line">	<span class="k">if</span><span class="o">(</span><span class="n">imageUri</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
</span><span class="line">		<span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">decodeUriAsBitmap</span><span class="o">(</span><span class="n">imageUri</span><span class="o">);</span><span class="c1">//decode bitmap</span>
</span><span class="line">		<span class="n">imageView</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">);</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line"><span class="k">break</span><span class="o">;</span>
</span><span class="line"><span class="k">case</span> <span class="nl">CHOOSE_SMALL_PICTURE:</span>
</span><span class="line">	<span class="k">if</span><span class="o">(</span><span class="n">data</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
</span><span class="line">		<span class="n">Bitmap</span> <span class="n">bitmap</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">getParcelableExtra</span><span class="o">(</span><span class="s">&quot;data&quot;</span><span class="o">);</span>
</span><span class="line">		<span class="n">imageView</span><span class="o">.</span><span class="na">setImageBitmap</span><span class="o">(</span><span class="n">bitmap</span><span class="o">);</span>
</span><span class="line">	<span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span><span class="line">		<span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;CHOOSE_SMALL_PICTURE: data = &quot;</span> <span class="o">+</span> <span class="n">data</span><span class="o">);</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line"><span class="k">break</span><span class="o">;</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="section-2">效果图</h4>

<p><img src="http://ryanhoo.github.io/images/blog/android/183645_yuLJ_245415.gif" alt="大图" /></p>

<p><img src="http://ryanhoo.github.io/images/blog/android/183707_DnNy_245415.gif" alt="小图" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android大图片裁剪终极解决方案（上：原理分析）]]></title>
    <link href="http://ryanhoo.github.io/blog/2014/05/26/the-ultimate-approach-to-crop-photos-on-android-1/"/>
    <updated>2014-05-26T17:37:42+08:00</updated>
    <id>http://ryanhoo.github.io/blog/2014/05/26/the-ultimate-approach-to-crop-photos-on-android-1</id>
    <content type="html"><![CDATA[
<p>约几个月前，我正为公司的APP在Android手机上实现拍照截图而烦恼不已。</p>

<p>上网搜索，确实有不少的例子，大多都是抄来抄去，而且水平多半处于demo的样子，可以用来讲解知识点，但是一碰到实际项目，就漏洞百出。</p>

<p>当时我用大众化的解决方案，暂时性的做了一个拍照截图的功能，似乎看起来很不错。可是问题随之而来，我用的是小米手机，在别的手机上都运行正常，在小米这里却总是碰钉子。虽然我是个理性的米粉，但是也暗地里把小米的工程师问候了个遍。真是惭愧！</p>

<p>翻文档也找不出个答案来，我一直对<strong>com.android.camera.action.CROP</strong>持有大大的疑问，它是从哪里来，它能干什么，它接收处理什么类型的数据？Google对此却讳莫如深，在官方文档中只有Intent中有只言片语言及，却不甚详尽。</p>

<p>随着项目的驱动，我不能抱着不了解原理就不往前走的心态，唯一要做的，是解决问题。最后在德问上找到一条解决方案，说是哪怕是大米也没问题。当时乐呵呵将代码改了改，确实在所有的手机上跑起来了，一时如释重负，对这个的疑问也抛诸脑后了。</p>

<p>直到月前，BOSS要求将拍照上传到服务器的图片分辨率加倍。OK，加倍简单，增加<code>outputX</code>以及<code>outputY</code>不就得了？</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputX&quot;</span><span class="o">,</span> <span class="n">outputX</span><span class="o">);</span>
</span><span class="line"><span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">&quot;outputY&quot;</span><span class="o">,</span> <span class="n">outputY</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这一增加，吓了我一跳。BOSS的手机拍到的照片几乎就是个缩略图，但是被我问候了全体工程师的小米在这个时候就体现出国产神机的范儿了，小米上的尺寸一切正常。这个为什么呢？我大致了解原因，却不知道如何解决。</p>

<p>在Android中，Intent触发Camera程序，拍好照片后，将会返回数据，但是考虑到内存问题，Camera不会将全尺寸的图像返回给调用的Activity，一般情况下，有可能返回的是缩略图，比如<strong>120*160px</strong>。</p>

<p>这是为什么呢？这不是一个Bug，而是经过精心设计的，却对开发者不透明。</p>

<p>以我的小米手机为例，摄像头800W像素，根据我目前设置拍出来的图片尺寸为<strong>3200*2400px</strong>。有人说，那就返回呗，大不了耗1-2M的内存，不错，这个尺寸的图片确实只有1.8M左右的大小。但是你想不到的是，这个尺寸对应的Bitmap会耗光你应用程序的所有内存。Android出于安全性考虑，只会给你一个寒碜的缩略图。</p>

<p>在Android2.3中，默认的Bitmap为32位，类型是<code>ARGB_8888</code>，也就意味着一个像素点占用4个字节的内存。我们来做一个简单的计算题：</p>

<p><code>3200*2400*4 bytes =   30M</code></p>

<p>如此惊人的数字！哪怕你愿意为一张生命周期超不过10s的位图愿意耗费这么巨大的内存，Android也不会答应的。</p>

<blockquote>
  <p>Mobile devices typically have constrained system resources. 
Android devices can have as little as 16MB of memory available to a single application.</p>
</blockquote>

<p>这是Android Doc的原文，虽然不同手机系统的厂商可能围绕16M这个数字有微微的上调，但是这30M，一般的手机还真挥霍不起。也只有小米这种牛机，内存堪比个人PC，本着土财主般挥金如土的霸气才能做到。</p>

<p>OK，说了这么多，无非是吐吐苦水，爆爆个人经历而已，实际的解决方案在哪里呢？</p>

<p>我也是Google到的，话说一般百度不了的问题，那就<code>Google</code>或者直接<code>StackOverFlow</code>，只不过得看英文罢了。</p>

<p>最后翻来覆去，我在国外的一个Android团队的博客中找到了相应的方案，印证了我的猜想同时也给出了实际的代码。</p>

<p>我将这篇文章翻译成了中文，作为本博客的基础，建议详细看看。</p>

<p><a href="http://my.oschina.net/ryanhoo/blog/86843">【译】如何使用Android MediaStore裁剪大图片</a></p>

<p>这篇博客了不起的地方在于解决了Android对返回图片的大小限制，并且详细解释了裁剪图片的<code>Intent</code>附加数据的具体含义。我只是站在巨人的肩膀上，改善方案，适应更广泛需求而已。</p>

<p>拿图说事儿：</p>

<p><img src="http://ryanhoo.github.io/images/blog/android/144805_wCcI_245415.png" alt="Intent Options" /></p>

<p><code>Intent("com.android.camera.action.CROP")</code>对应的所有可选数据都一目了然。在了解上面个个选项的含义之后，我们将目光着眼于三个极为重要的选项：</p>

<ul>
  <li>data</li>
  <li>MediaStore.EXTRA_OUTPUT</li>
  <li>return-data</li>
</ul>

<p><code>data和MediaStore.EXTRA_OUTPUT</code>都是可选的传入数据选项，你可以选择设置data为Bitmap，或者将相应的数据与URI关联起来，你也可以选择是否返回数据（return-data: true）。</p>

<p>为什么还有不用返回数据的选项？如果对URI足够了解的话，应该知道URI与File相似，你所有的操作如裁剪将数据都保存在了URI中，你已经持有了相应的URI，也就无需多此一举，再返回Bitmap了。</p>

<p>前面已经说到，可以设置data为Bitmap，但是这种操作的限制在于，你的Bitmap不能太大。因此，我们前进的思路似乎明确了：截大图用URI，小图用Bitmap。</p>

<p>我将这个思路整理成一张图片：</p>

<p><img src="http://ryanhoo.github.io/images/blog/android/151831_7gRC_245415.png" alt="idea" /></p>

<p>这篇主要让大家了解需求的来源，以及如何去思考分析并解决问题。下一篇博客将介绍具体的操作。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【译】Android：更好的自定义字体方法]]></title>
    <link href="http://ryanhoo.github.io/blog/2014/05/05/android-better-way-to-apply-custom-font/"/>
    <updated>2014-05-05T17:48:26+08:00</updated>
    <id>http://ryanhoo.github.io/blog/2014/05/05/android-better-way-to-apply-custom-font</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section">情景</a></li>
  <li><a href="#section-1">解决方案</a>    <ul>
      <li><a href="#android-1">1）Android默认方法 #1</a></li>
      <li><a href="#android-2">2）Android默认方法 #2</a></li>
      <li><a href="#section-2">3）我的解决方案</a></li>
    </ul>
  </li>
  <li><a href="#section-3">译者注</a></li>
  <li><a href="#section-4">参考</a></li>
</ul>

<blockquote>
  <p>原文：<a href="http://vision-apps.blogspot.hk/2012/02/android-better-way-to-apply-custom-font.html">http://vision-apps.blogspot.hk/2012/02/android-better-way-to-apply-custom-font.html</a></p>
</blockquote>

<p>在一个应用中，我需要在所有的UI组件中使用客户提供的字体。这听起来似乎是个很稀松平常的任务，不是吗？是的，我当时也是这么想的。然后我震惊了，Android竟然没有提供一个简单优雅的方式来做这件事情!</p>

<p>所以，在这篇文章中我会展示Android提供的默认方法，然后我会分享更加简单优雅的解决方案。</p>

<h3 id="section">情景</h3>

<p>你需要为整个应用替换自定义字体。</p>

<h3 id="section-1">解决方案</h3>

<h4 id="android-1">1）Android默认方法 #1</h4>

<p>你可以通过ID查找到View，然后挨个为它们设置字体。在单个View的情况下，它看起来也没有那么可怕。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="n">Typeface</span> <span class="n">customFont</span> <span class="o">=</span> <span class="n">Typeface</span><span class="o">.</span><span class="na">createFromAsset</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getAssets</span><span class="o">(),</span> <span class="s">&quot;fonts/YourCustomFont.ttf&quot;</span><span class="o">);</span>
</span><span class="line"><span class="n">TextView</span> <span class="n">view</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">activity_main_header</span><span class="o">);</span>
</span><span class="line"><span class="n">view</span><span class="o">.</span><span class="na">setTypeface</span><span class="o">(</span><span class="n">customFont</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>但是在很多TextView、Button等文本组件的情况下，我敢肯定你不会喜欢这个方法的。:D</p>

<h4 id="android-2">2）Android默认方法 #2</h4>

<p>你可以为每个文本组件创建一个子类，如TextView、Button等，然后在构造函数中加载自定义字体。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">BrandTextView</span> <span class="kd">extends</span> <span class="n">TextView</span> <span class="o">{</span>
</span><span class="line">
</span><span class="line">      <span class="kd">public</span> <span class="nf">BrandTextView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">defStyle</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">          <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">,</span> <span class="n">defStyle</span><span class="o">);</span>
</span><span class="line">      <span class="o">}</span>
</span><span class="line">     <span class="kd">public</span> <span class="nf">BrandTextView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">          <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class="line">      <span class="o">}</span>
</span><span class="line">     <span class="kd">public</span> <span class="nf">BrandTextView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">          <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class="line">     <span class="o">}</span>
</span><span class="line">     <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTypeface</span><span class="o">(</span><span class="n">Typeface</span> <span class="n">tf</span><span class="o">,</span> <span class="kt">int</span> <span class="n">style</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">           <span class="k">if</span> <span class="o">(</span><span class="n">style</span> <span class="o">==</span> <span class="n">Typeface</span><span class="o">.</span><span class="na">BOLD</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">                <span class="kd">super</span><span class="o">.</span><span class="na">setTypeface</span><span class="o">(</span><span class="n">Typeface</span><span class="o">.</span><span class="na">createFromAsset</span><span class="o">(</span><span class="n">getContext</span><span class="o">().</span><span class="na">getAssets</span><span class="o">(),</span> <span class="s">&quot;fonts/YourCustomFont_Bold.ttf&quot;</span><span class="o">));</span>
</span><span class="line">            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class="line">               <span class="kd">super</span><span class="o">.</span><span class="na">setTypeface</span><span class="o">(</span><span class="n">Typeface</span><span class="o">.</span><span class="na">createFromAsset</span><span class="o">(</span><span class="n">getContext</span><span class="o">().</span><span class="na">getAssets</span><span class="o">(),</span> <span class="s">&quot;fonts/YourCustomFont.ttf&quot;</span><span class="o">));</span>
</span><span class="line">            <span class="o">}</span>
</span><span class="line">      <span class="o">}</span>
</span><span class="line"> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后只需要将标准的文本控件替换成你自定义的就可以了（例如BrandTextView替换TextView）。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;com.your.package.BrandTextView</span>
</span><span class="line">         <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class="line">         <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class="line">         <span class="na">android:text=</span><span class="s">&quot;View with custom font&quot;</span><span class="nt">/&gt;</span>
</span><span class="line"><span class="nt">&lt;com.your.package.BrandTextView</span>
</span><span class="line">         <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class="line">         <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class="line">         <span class="na">android:textStyle=</span><span class="s">&quot;bold&quot;</span>
</span><span class="line">         <span class="na">android:text=</span><span class="s">&quot;View with custom font and bold typeface&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>还有，你甚至可以直接在XML中添加自定义的字体属性。要实现这个，你需要定义你自己的<code>declare-styleable</code>属性，然后在组件的构造函数中解析它们。</p>

<p>为了不占篇幅介绍这么基础的东西，这里有一篇不错的文章告诉你怎么自定义控件属性。</p>

<blockquote>
  <p><a href="http://kevindion.com/2011/01/custom-xml-attributes-for-android-widgets/">http://kevindion.com/2011/01/custom-xml-attributes-for-android-widgets/</a></p>
</blockquote>

<p>在大多数情况下，这个方法还不赖，并且有一些优点（例如，切换字体粗细等等，字体可以在组件xml文件的typeface属性中定义）。但是我认为这个实现方法还是太重量级了，并且依赖大量的模板代码，为了一个替换字体的简单任务，有点儿得不偿失。</p>

<h4 id="section-2">3）我的解决方案</h4>

<p>理想的解决方案是自定义主题，然后应用到全局或者某个Activity。
但不幸的是，Android的<code>android:typeface</code>属性只能用来设置系统内嵌的字体，而非用户自定义字体(例如assets文件中的字体)。这就是为什么我们无法避免在Java代码中加载并设置字体。</p>

<p>所以我决定创建一个帮助类，使得这个操作尽可能的简单。使用方法：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">FontHelper.applyFont(context, findViewById(R.id.activity_root), &quot;fonts/YourCustomFont.ttf&quot;);
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>并且这行代码会用来加载所有的基于TextView的文本组件（TextView、Button、RadioButton、ToggleButton等等），而无需考虑界面的布局层级如何。</p>

<p><img src="http://ryanhoo.github.io/images/blog/2014-05-05-before and after.png" alt="标准(左)与自定义(右)字体的用法。" /></p>

<p>这是怎么做到的？非常简单：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">applyFont</span><span class="o">(</span><span class="kd">final</span> <span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="kd">final</span> <span class="n">View</span> <span class="n">root</span><span class="o">,</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">fontName</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">    <span class="k">try</span> <span class="o">{</span>
</span><span class="line">        <span class="k">if</span> <span class="o">(</span><span class="n">root</span> <span class="k">instanceof</span> <span class="n">ViewGroup</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">            <span class="n">ViewGroup</span> <span class="n">viewGroup</span> <span class="o">=</span> <span class="o">(</span><span class="n">ViewGroup</span><span class="o">)</span> <span class="n">root</span><span class="o">;</span>
</span><span class="line">            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">viewGroup</span><span class="o">.</span><span class="na">getChildCount</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span>
</span><span class="line">                <span class="n">applyFont</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">viewGroup</span><span class="o">.</span><span class="na">getChildAt</span><span class="o">(</span><span class="n">i</span><span class="o">),</span> <span class="n">fontName</span><span class="o">);</span>
</span><span class="line">        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">root</span> <span class="k">instanceof</span> <span class="n">TextView</span><span class="o">)</span>
</span><span class="line">            <span class="o">((</span><span class="n">TextView</span><span class="o">)</span> <span class="n">root</span><span class="o">).</span><span class="na">setTypeface</span><span class="o">(</span><span class="n">Typeface</span><span class="o">.</span><span class="na">createFromAsset</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getAssets</span><span class="o">(),</span> <span class="n">fontName</span><span class="o">));</span>
</span><span class="line">    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class="line">        <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">&quot;Error occured when trying to apply %s font for %s view&quot;</span><span class="o">,</span> <span class="n">fontName</span><span class="o">,</span> <span class="n">root</span><span class="o">));</span>
</span><span class="line">        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class="line">    <span class="o">}</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>正如你所看到的，所需要做的仅仅是将基于TextView的文本组件从布局中遍历出来而已。</p>

<p>你可以在这里下载到示例代码，里面有<a href="http://db.tt/i9S80Mgr"><code>FontHelper</code></a>的具体用法。</p>

<h3 id="section-3">译者注</h3>

<p>在多个项目中，我都碰到过类似的需求，早期采用的是第二种实现方法，但是缺点在于对于第三方组件，你需要去修改别人的代码，才能实现自定义字体，这恰恰违反了OC（Open &amp; Close）原则，对扩展开放，对修改封闭。</p>

<p>刚看到第三种的时候，也是惊为天人，姑且不说结果，我觉得这种活跃的思路非常重要，很值得学习参考。</p>

<p>但是最后被team里的人否决了，理由是违背组件设计原则，实现方式略嫌粗暴。后来我仔细想想，一个是要做好内存管理（似乎会引起内存问题），视图状态改变，也要重复加载（横竖屏、onResume等），也绝对不是简单的活儿。</p>

<p>所以暂定使用第一种方法，typeface使用单例，需要时设置字体。</p>

<p>我个人觉得第一种还是个体力活，而且到后来，这个代码重复率还是非常高的，这又违背了DRY原则。</p>

<p>在地铁上的时候，突然想到DI（Dependency Inject）。已经有一些DI的框架，如ButterKnife，那写出来应该是这样：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="nd">@CustomFont</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView</span><span class="o">)</span> <span class="n">TextView</span> <span class="n">textView</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>or</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="java"><span class="line"><span class="nd">@InjectView</span><span class="o">(</span><span class="n">id</span><span class="o">=</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView</span><span class="o">,</span> <span class="n">customFont</span><span class="o">=</span><span class="kc">true</span><span class="o">)</span> <span class="n">View</span> <span class="n">anyView</span>
</span><span class="line"><span class="nd">@InjectView</span><span class="o">(</span><span class="n">id</span><span class="o">=</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">textView</span><span class="o">,</span> <span class="n">customFont</span><span class="o">=</span><span class="kc">true</span><span class="o">,</span> <span class="n">font</span><span class="o">=</span><span class="s">&quot;fonts/ltfz.ttf&quot;</span><span class="o">)</span> <span class="n">View</span> <span class="n">anyView</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>这样写出来代码相比重复写setTypeface要好一些。</p>

<p>目前我们的项目还没有使用这类DI框架，等以后引入了，使用第二种注入，写起来应该是很爽的。</p>

<p>保持更新。</p>

<h3 id="section-4">参考</h3>

<ul>
  <li><a href="http://www.javacodegeeks.com/2014/02/dependency-injection-options-for-java.html">DI框架</a></li>
  <li><a href="http://stormzhang.github.io/openandroid/android/2014/01/12/android-butterknife/">ButterKnife</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Octopress搭建自己的博客]]></title>
    <link href="http://ryanhoo.github.io/blog/2014/04/28/build-your-own-blog-with-octopress/"/>
    <updated>2014-04-28T22:07:27+08:00</updated>
    <id>http://ryanhoo.github.io/blog/2014/04/28/build-your-own-blog-with-octopress</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#step-1-octopress">Step 1: 安装Octopress</a></li>
  <li><a href="#step-2-">Step 2: 配置</a></li>
  <li><a href="#step-3-github-pages">Step 3: 设置github pages</a></li>
  <li><a href="#step-4-">Step 4: 编译、预览与发布</a></li>
  <li><a href="#step-5--octopress">Step 5: 更新 Octopress</a></li>
  <li><a href="#section">参考</a></li>
</ul>

<p>一直想搭建一个自己的博客，开始付诸行动！</p>

<p>刚刚接触到Octopress，总体感觉还是不错的，但是它不像segmentfault、oschina之类的平台，什么都具备，很多东西默认没有，需要自己配置，不过在玩的过程中总是能学到新东西的。</p>

<h2 id="step-1-octopress">Step 1: 安装Octopress</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git clone git://github.com/imathis/octopress.git octopress
</span><span class="line">cd octopress
</span><span class="line">bundle update    # 安装依赖的组件
</span><span class="line">rake install     # 安装默认的Octopress主题</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="step-2-">Step 2: 配置</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git remote rm origin
</span><span class="line">git remote add origin git@github.com:ryanhoo/ryanhoo.github.com.git
</span><span class="line">git remote add octopress git://github.com/imathis/octopress.git  # 为了octopress的升级而添加</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="step-3-github-pages">Step 3: 设置github pages</h2>

<p>在github上创建一个仓库，注意仓库名称要以下这种格式yourname.github.com，这样代码发布后自动这个url就可以访问了（此处一定要注意哦，我刚开始没注意，死活没得到想要的效果）。 例如你的 GitHub 帐号是 jack 就将 Repository 命名为 jack.github.com， 完成后会得到一组 GitHub Pages URL http://yourname.github.com/ (注意不能用 https协议，必须用 http协议)。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake setup_github_pages</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="step-4-">Step 4: 编译、预览与发布</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">rake generate  			# 生成网页
</span><span class="line">rake preview   			# 预览
</span><span class="line">rake deploy    			# 发布
</span><span class="line">rake gen_deploy 		# 相当于生成+发布
</span><span class="line">rake new_page["name"] 	# 创建新页面
</span><span class="line">rake new_post["name"]	# 新建博文</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="step-5--octopress">Step 5: 更新 Octopress</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">git remote add octopress git://github.com/imathis/octopress.git
</span><span class="line">git pull octopress master     # Get the latest Octopress
</span><span class="line">bundle install                # Keep gems updated
</span><span class="line">rake update_source            # update the template's source
</span><span class="line">rake update_style             # update the template's style</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">参考</h2>

<ul>
  <li><a href="https://github.com/shashankmehta/greyshade">主题配置</a></li>
  <li><a href="http://imallen.com/blog/2013/05/12/add-support-for-weibo-and-dribbble-to-greyshade.html">增加新浪微博链接</a></li>
  <li><a href="http://docs.shopify.com/themes/liquid-basics">Liquid Basics</a></li>
  <li><a href="http://khaos.github.io/blog/2012/12/05/generating-toc-in-octopress/">添加目录</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
